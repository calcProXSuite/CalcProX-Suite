<!DOCTYPE html><html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Currency Converter - CalcProX Suite</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #f4f7fc;
      color: #333;
      margin: 0;
      padding: 0;
    }
    header {
      background-color: #2d3e50;
      color: white;
      padding: 1rem;
      text-align: center;
    }
    main {
      max-width: 900px;
      margin: 2rem auto;
      background: white;
      padding: 2rem;
      border-radius: 10px;
      box-shadow: 0 0 15px rgba(0,0,0,0.1);
    }
    .converter {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      justify-content: space-between;
      align-items: center;
    }
    .converter input, .converter select {
      flex: 1;
      padding: 0.8rem;
      font-size: 1rem;
      border-radius: 5px;
      border: 1px solid #ccc;
    }
    .result {
      margin-top: 1.5rem;
      font-size: 1.2rem;
      font-weight: bold;
    }
    section {
      margin-top: 2rem;
    }
    h2 {
      border-left: 4px solid #ff9800;
      padding-left: 10px;
      color: #2d3e50;
    }
    footer {
      text-align: center;
      padding: 1.5rem;
      background-color: #2d3e50;
      color: white;
      margin-top: 2rem;
    }
    .tagline {
      font-weight: bold;
      font-size: 1.1rem;
      color: #ff9800;
      margin-top: 1rem;
    }
  </style>
</head>
<body>
  <header>
    <h1>CalcProX Suite - Currency Converter</h1>
  </header>  <main>
    <div class="converter">
      <input type="number" id="amount" value="1" />
      <select id="from"></select>
      <select id="to"></select>
    </div>
    <div class="result" id="result">Fetching exchange rate...</div><section>
  <h2>How Currency Conversion Works</h2>
  <p>Currency conversion is the process of exchanging one form of currency for another. The value is determined by the foreign exchange market, which operates 24/7 globally. Exchange rates fluctuate constantly based on supply, demand, interest rates, economic performance, and geopolitical stability.</p>
</section>

<section>
  <h2>Frequently Asked Questions (FAQs)</h2>
  <ul>
    <li><strong>Q:</strong> How accurate are these rates?<br><strong>A:</strong> Rates are fetched live from exchangerate.host, ensuring real-time accuracy.</li>
    <li><strong>Q:</strong> How often are rates updated?<br><strong>A:</strong> They update with every conversion request.</li>
    <li><strong>Q:</strong> Can I convert crypto currencies too?<br><strong>A:</strong> Currently only fiat currencies are supported.</li>
  </ul>
</section>

<section>
  <h2>Currency Conversion Table (Base: 1 EUR)</h2>
  <div id="table-area">Loading table...</div>
</section>

  </main>  <footer>
    <div class="tagline">Goli nahi marenge usko, keh ke lenge uski</div>
    <div>All Rights Reserved â€“ CalcProX Suite</div>
  </footer>  <script>
    const currencyList = ["USD", "EUR", "INR", "GBP", "JPY", "CAD", "AUD", "CHF"];
    const fromSelect = document.getElementById("from");
    const toSelect = document.getElementById("to");
    const amountInput = document.getElementById("amount");
    const resultBox = document.getElementById("result");
    const tableArea = document.getElementById("table-area");

    function populateDropdowns() {
      currencyList.forEach(code => {
        fromSelect.add(new Option(code, code));
        toSelect.add(new Option(code, code));
      });
      fromSelect.value = "EUR";
      toSelect.value = "USD";
    }

    async function convertCurrency() {
      const amount = parseFloat(amountInput.value);
      const from = fromSelect.value;
      const to = toSelect.value;

      if (isNaN(amount)) return resultBox.textContent = "Enter a valid amount.";

      resultBox.textContent = "Converting...";

      try {
        const res = await fetch(`https://api.exchangerate.host/convert?from=${from}&to=${to}&amount=${amount}`);
        const data = await res.json();
        resultBox.textContent = `${amount} ${from} = ${data.result.toFixed(4)} ${to}`;
      } catch (err) {
        resultBox.textContent = "Failed to fetch live rates.";
      }
    }

    async function loadTable(base = 'EUR') {
      try {
        const res = await fetch(`https://api.exchangerate.host/latest?base=${base}`);
        const data = await res.json();
        let tableHTML = '<table border="1" cellspacing="0" cellpadding="8"><tr><th>Currency</th><th>Rate</th></tr>';
        currencyList.forEach(code => {
          if (code !== base) {
            tableHTML += `<tr><td>${code}</td><td>${data.rates[code].toFixed(4)}</td></tr>`;
          }
        });
        tableHTML += '</table>';
        tableArea.innerHTML = tableHTML;
      } catch {
        tableArea.innerHTML = 'Failed to load table.';
      }
    }

    fromSelect.addEventListener("change", () => {
      convertCurrency();
      loadTable(fromSelect.value);
    });
    toSelect.addEventListener("change", convertCurrency);
    amountInput.addEventListener("input", convertCurrency);

    populateDropdowns();
    convertCurrency();
    loadTable();
  </script></body>
</html>
